{"version":3,"sources":["Components/Lobby/Lobby.js","Components/Game/Game.js","Components/Error/Error.js","app.js","index.js"],"names":["Lobby","useState","link","setLink","input","useRef","className","ref","type","placeholder","value","onChange","e","target","href","socket","W3CWebSocket","Game","props","clientId","setClientId","counter","setCounter","clicksToReward","setClicksToReward","clicks","setClicks","points","setPoints","clientName","match","params","client","useEffect","onmessage","message","response","JSON","parse","data","method","localStorage","getItem","clientData","setItem","stringify","payLoad","onopen","send","updateCounter","onClick","to","ErrorPage","App","path","exact","component","Index","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8202bc00.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './Lobby.css';\r\n\r\n\r\nconst Lobby = () => {\r\n  const [link, setLink] = useState('')\r\n  const input = useRef(null)\r\n\r\n  return (\r\n    <div className=\"Lobby\">\r\n      <h1>Button Game</h1>\r\n      <p className=\"header\">2020 - Koodarijahti</p>\r\n      <input\r\n        ref={input}\r\n        className=\"formstyle inputStyle\"\r\n        type=\"text\"\r\n        placeholder=\"type your gamer name\"\r\n        value={link}\r\n        onChange={e => setLink(e.target.value)}\r\n      />\r\n      <br />\r\n      <a href={`/${link}`}>\r\n        <button value=\"PLAY\" type=\"submit\" className=\"LobbyButton\">PLAY</button>\r\n      </a>\r\n      <div className=\"link\">\r\n        <p>by Samuel Koskelainen</p>\r\n        <p><a className=\"link\" href=\"https://github.com/samuelkoskelainen/koodarijahti\">github</a></p>\r\n      </div>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default Lobby;","import React, { useEffect, useState } from 'react';\r\nimport { w3cwebsocket as W3CWebSocket } from 'websocket'\r\nimport { Link } from 'react-router-dom'\r\nimport './Game.css'\r\n\r\nconst socket = new W3CWebSocket('ws://localhost:8000')\r\n\r\n\r\nconst Game = (props) => {\r\n  const [clientId, setClientId] = useState('')\r\n  const [counter, setCounter] = useState(0)\r\n  const [clicksToReward, setClicksToReward] = useState(10)\r\n  const [clicks, setClicks] = useState(0)\r\n  const [points, setPoints] = useState(0)\r\n\r\n  const clientName = props.match.params.client\r\n\r\n  /** CLIENT-BACKEND HANDLER ON COMPONENT DID MOUNT*/\r\n  useEffect(() => {\r\n    socket.onmessage = message => {\r\n      const response = JSON.parse(message.data)\r\n      // handle connect\r\n      if (response.method === \"client-connect\") {\r\n        if (localStorage.getItem(`${clientName}`)) {\r\n          const clientData = localStorage.getItem(`${clientName}`)\r\n          const client = JSON.parse(clientData)\r\n          setClientId(client.clientId)\r\n          setClicks(client.clicks)\r\n          setPoints(client.points)\r\n        } else {\r\n          const client = {\r\n            clientId: response.clientId,\r\n            clicks: response.clicks,\r\n            points: response.points,\r\n          }\r\n          localStorage.setItem(`${clientName}`, JSON.stringify(client))\r\n          setClientId(response.clientId)\r\n          setClicks(response.clicks)\r\n          setPoints(response.points)\r\n        }\r\n        setCounter(response.counter)\r\n        setClicksToReward(response.clicksToReward)\r\n      }\r\n\r\n      // handle button click\r\n      if (response.method === \"client-buttonClick\") {\r\n        const clientData = localStorage.getItem(`${clientName}`)\r\n        const client = JSON.parse(clientData)\r\n        client.clicks = response.clicks\r\n        client.points = response.points\r\n        localStorage.setItem(`${clientName}`, JSON.stringify(client))\r\n        setClicks(response.clicks)\r\n        setPoints(response.points)\r\n      }\r\n\r\n      // handle updating every clients counter\r\n      if (response.method === \"client-all-updateCounter\") {\r\n        setCounter(response.counter)\r\n        setClicksToReward(response.clicksToReward)\r\n      }\r\n    }\r\n\r\n    const payLoad = {\r\n      \"method\": \"client-connect\"\r\n    }\r\n\r\n    socket.onopen = () => client.send(JSON.stringify(payLoad))\r\n  }, [])\r\n\r\n  /** CLIENT-BACKEND HANDLERS TO UI ELEMENTS */\r\n\r\n  const buttonClick = () => {\r\n    const payLoad = {\r\n      \"method\": \"client-buttonClick\",\r\n      \"clientId\": clientId,\r\n      \"clicks\": clicks,\r\n      \"points\": points,\r\n      \"counter\": counter\r\n    }\r\n\r\n    socket.send(JSON.stringify(payLoad))\r\n  }\r\n\r\n  const updateCounter = () => {\r\n    const payLoad = {\r\n      \"method\": \"client-all-updateCounter\",\r\n    }\r\n    socket.send(JSON.stringify(payLoad))\r\n  }\r\n  useEffect(() => updateCounter, [clicks])\r\n\r\n\r\n\r\n  /** ------------------------------------------ */\r\n\r\n  return (\r\n    <div className=\"ButtonSection\">\r\n      <div className=\"player\">\r\n        <p>player: {clientName}</p>\r\n      </div>\r\n      <div className=\"info\">\r\n        <p>clicks to reward: {clicksToReward}</p>\r\n      </div>\r\n      <p>points: {points}</p>\r\n      <div className=\"buttons\">\r\n        <button className=\"PlayButton\" onClick={clicks > 0 ? buttonClick : null}>{clicks}</button>\r\n      </div>\r\n\r\n      <Link to=\"/\">\r\n        <button className=\"ContinueButton\">Back to lobby</button>\r\n      </Link>\r\n      {clicks <= 0 ? <button className=\"ContinueButton\" onClick={() => setClicks(20)}>continue?</button> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport './Error.css'\r\n\r\nconst ErrorPage = () => {\r\n  return (\r\n    <div className=\"ErrorLayout\">\r\n      <h1>404 - Not Found</h1>\r\n      <Link to=\"/\">\r\n        <button className=\"ErrorButton\">TO LOBBY</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorPage;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Lobby from '../src/Components/Lobby/Lobby'\r\nimport Game from '../src/Components/Game/Game'\r\nimport ErrorPage from '../src/Components/Error/Error'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Lobby} />\r\n        <Route path=\"/:client\" exact component={Game} />\r\n        <Route component={ErrorPage} />\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;","import ReactDOM from 'react-dom'\r\nimport React, { Component } from 'react'\r\nimport App from './app'\r\n\r\nexport default class Index extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <App />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nReactDOM.render(<Index />, document.getElementById('root'))\r\n"],"sourceRoot":""}